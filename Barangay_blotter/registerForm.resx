<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CircleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGpSURBVHhe7dnN
        TsNADATgPh4nhBCoB3j6IoR4hiKVcTzFNErS/Fxi73zSStTrSB4DOcBBRERERERkby6XyzPON84XziPL
        bUDgI84Z5+qTV/Uh7CvO//AdXteGnIPhDVvqQsbR8IZtNSHfZHjD1nqQrf/CM228A5Br6Dv/g/PmXwY+
        UgcyjYbn/Y3uoSqQZzK88VJgOT9kuRveeDmwnBtyzApv/CqwnBcyzA5v/DqwnBPmXxTeeEtgOR/Mvji8
        8bbAci6Ye1V4462B5Tww8+rwxtsDyzlg3k3hjT8SWN4/zPqE0w9vn49smcUfCyzvH2b98JH/LA5v/NHA
        8v5h1uYX0PavgMG8Lzj9JdhL8J0td/kjgeU8MPOmJXh7YDkXzL16Cd4aWM4Hs69agrcFlnPC/IuX4C2B
        5byQYdES/DqwnBtyzF6CXwWW80OWWUvwcmC5BuS5uwQvBZbrQKbJJfjH0D1UDXKNLsG/DHykHmRr919j
        V8g39JNwg611IePkEthWG3KOLoEt9SHr4BJ43Qbk7b8YT7xqB0LbX5ZOPA8si4iIiIiIbHQ4/AIA4sUp
        tw3wjQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gAfiAAAH8AABD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>